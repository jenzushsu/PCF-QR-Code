# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: pcf-build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [12.x]
    env:
      solutionpath: Solution/PCFQRCode/bin/Debug/
      solutionname: PCFQRCode
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    
    - name: Cache Node.js modules
      uses: actions/cache@v1
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci

    - run: npm run build --if-present
    - run: npm test
    
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    
    - name: MSBuild
      working-directory: Solution/PCFQRCode
      run: msbuild /restore /t:rebuild
    
    - name: Read package.json
      uses: tyankatsu0105/read-package-version-actions@v1
      id: package-version
    
    - name: Managed Solution Artifact ${{steps.package-version.outputs.version}}_managed.zip
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.solutionname}}${{steps.package-version.outputs.version}}_managed.zip
        path: ${{env.solutionpath}}${{env.solutionname}}_managed.zip
    
    - name: Unmanaged Solution Artifact ${{steps.package-version.outputs.version}}_unmanaged.zip
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.solutionname}}_${{steps.package-version.outputs.version}}_unmanaged.zip
        path: ${{env.solutionpath}}${{env.solutionname}}.zip
